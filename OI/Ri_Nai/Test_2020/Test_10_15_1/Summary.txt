T1是一个二分的题目,题面感觉和二分入门的时候写的那道青蛙过河很像.
每次二分时贪心挺好想的,就是到终点前小于二分值会有点想不清楚,但是实际一想还是挺简单的
因为我们之前已经保证每一段都是恰好>=二分值,若到终点前的那段距离<二分值,直接将其并入前面的那段就可以了

T2可以用二分,可以用尺取(而我两个都用了草)
一开始我把重叠的点特判成一个点,但是cnt不一样,所以在二分时上了尺取,但是后来对拍的时候拍出错了(就没舍得去改)

T3是最近计数dp中最好想的一道吧,就是三维dp/Sum[N][M][K]
第一串的下标,作为第二串的下标,以及拆分成的第几个串,分别表示这次的dp值和前缀Sum值
会爆内存,所以用滚动数组(第一维整维都可以压掉)

T4为了追求一点点小小的常数葬送了55分(/kk)
考场的时候打了80分的暴力,有60分(n<=3000||m==1)放到同一个namespace里
因为m==1的时候n会比较大,而我写的是一个倍增LCA,用了树状数组+差分维护每个Query的权值
总时间复杂度为O(nmlogn)
一开始过了大样例,后来怕倍增的那个log常数比较大,影响n=m=3000的情况,就动态倍增上限了
但是我倍增更新fa数组是放在dfs里的,而我求倍增上限不知道为什么就放到了调用dfs的下一行
然后就导致dfs的时候没有去更新fa数组,而我以为这样改不会出什么错,就没去试样例和大样例,结果挂了55分
链的切分直接打上了multiset,维护在和不在这个区间里的最大值,考试的时候应该是过了的

写T4的时候一开始想到了二分性,但是不会打check函数就把它搁置了,20:00~21:00打前三题对拍
21:00~22:20一直在打暴力切分,最后没时间去检查T4暴力代码正确性了,但是还是感觉很稳(结果最后一题就挂掉了)

检查代码还是很重要的,不管之前是否过了样例,不管这次代码是否改动巨大,过过样例总是必要的,不能因为暴力的代码十分好写或者改动比较小而略过了检查的这一步
