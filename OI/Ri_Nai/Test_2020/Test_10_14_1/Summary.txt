这场考试下来,让我感觉到检查代码还是挺有用的

T1直接模拟,但是第一次打的时候有一个"ny"打成"y"了,多亏了-Wall说我的ny可能没有赋值,我才发现变量名打错的问题
T2就是求基环树中最小的环的大小,挺水的,但是和ly一样,扫描环上的点的时候in数组忘记清零了,后来检查的时候才发现

T3其实dp方程挺好想的,就贴一下考场的思路吧
{
    从20爆搜中我们已经发现了一个实质性的作用
    就是找到这个的前驱和后继.
    在dp的时候,可以在建立后继的过程中改变
    所以只需要记录前驱就可以了
    dp[N][2][N]第二维记录这一个是乒乓还是排球,第一维记录当前的楼层,第三维记录另一个的前驱的位置 
    比较恶心的一个地方在于初始化,因为最初是没有前驱的,并且可能会保持很久都没有前驱
    另一个比较恶心的地方在于转移.暂时还没想好 
    可以先初始化成无穷大然后再再后面清理这个的数值?

    另一个比较恶心的地方在于这个地方卡n^2处理i->j之间的人数的内存 
    好像甚至卡我这个dp数组的内存,可能是可以滚动吗?

    dp[i][1][j]=dp[i-1][1][j]+P[0][i]*(i-j);
    dp[i][0][i-1]=min(dp[i-1][1][j]+P[1][i]-SumA((i+j/2)~j))-SumA((i+j/2)~i)s;
    是至于dp[i-1]有关,故可以使用滚动数组

另一个地方就是这个Sum,暂时还没想好怎么优化掉内存
}
因为没优化掉这个Sum,所以只切了80分,但是实际上居然只有70分
考后就把这个Sum改成一个前缀大三角形的面积-前缀小三角形的面积-长方形的面积就可以了
(就是把乘的系数比作三角形的高,感觉挺形象的
T4是爆搜加启发式贪心(通过人类观察/生活经验(斗地主经验)进行贪心的策略)
整个问题可以分成四部分
顺子,四带,三带,单双牌(炸弹也是三带一/cy)
顺子>>四带>>三带>>单双牌
花色和大小王之分没什么用,就是带王的时候需要特判一下
并且顺的对的个数越大越好,长度越长越好,四带带的越多越好,三带带的越多越好
尽管不是最优策略,也能把最终答案压的很小,可以促进最优解剪枝
考试的时候没考虑三带能带单王的情况(谁打斗地主把王带出去(不是))

总体来说考得还不错,能拿到的分都拿到了