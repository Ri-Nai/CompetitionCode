T1就是一个Exgcd的裸题

T2一开始打了棵线段树,然后手造1e6样例的时候忘记输出空格了,程序编译错误,数据太大打不开,就重新写了一个二分

T3打了一个类似Trie树思想的东西,求出以字符c结尾的子序列的个数,以及更新以ch结尾,上一个是c的子序列个数
预计有50分,但是因为子序列数量太多,超过long long,若取模的导致第50分的时候就无法求暴力枚举a~z取max,然后就存了long long,结果第40分也爆了long long
其实也打了70分的切分,但是那时候还是没有意识到long long的问题(也没过大样例),那个贪心和正解的贪心很像,就是求last值最小的那个字符串,没打出正解的原因是不会dp求字符串的子序列个数.
考后捋了一下,其实塞入一个字符,就是将这个字符和前面的序列拼接(即dp[i]=dp[i-1]*2),再减去重复的字符串,重复的字符串就又来源于last前的字符串.就是dp状态定死在了和字符相关的dp值,导致了后来没想到状态的设计

T4题目一开始看错了以为军队是一个无情的生检查点的机器,就是军队走到哪里,哪里就有检查点,而且不需要军队驻扎就可以防控疫情.想的贪心和正解的贪心很像的,但是因为题目理解的偏差,导致这个贪心在我认为的题面中不适用,以至于后来全盘否定了这个贪心.

当我看到 无解:-1的时候,才发现我这个题目理解错了,因为我认为的题面是不可能无解的(除非不是一棵树)
贪心的思路已经被我否定掉了,然后看这个题面也没办法重新想到贪心,最后也没想到二分,只能绝望地打了一个puts("-1")
(结果输出-1居然没分,早知道当时就应该打一个枚举排列的暴力的