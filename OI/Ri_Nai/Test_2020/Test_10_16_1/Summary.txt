总体来说这次考得还不错,能切的分都切到了,也没有挂分的现象
T1就是一道水题
T2对我而言比较阴间,可能因为我的贪心策略比较low,对拍的时候每10组就跳出一组错误数据,前前后后改了不下15次,全程都在加补丁
一个长得原本很好看的代码被我改的全部都是if-else-continue,被我改得面目全非
越改越慌,因为这个代码最后就没什么逻辑,就全是特判,而且正确性也未知
最后对拍了18w+终于才敢放心

T3没什么思路,考试的时候就谢了25分的暴力和15分的链的切分
一开始题目看错了,以为求的是总答案,就很nt打了一个树链剖分+主席树,然后又删了
打链的时候就想到了差分,但是那时候T4还没动,就先去打T4了

T4不是一道很正经的期望dp,剥去概率的外衣,其实就是一个很普通的dp
这道题的终点不是固定的,并不是一定申请m次最优
顺推逆推其实都可以,毕竟是无向图,权值正着反着都一样
无向图的多源最短路可以用Floyd打(v只有300,不会真的有人去切特殊性质1吧)
考试的时候就写了一个更为显然的顺推dp
考虑到一个点的状态只与这个点前一个是否申请有关
所以只需要记dp[2][M][2]就可以了,表示滚动数组维,这一维申请次数,这一维是否申请(滚动数组维好像也能优化掉)
原本想记一维这次申请是否Success,但是最终记的是累加的最优答案,就把那一维删掉了
对于这一维是否申请成功和上一位是否申请成功,只需要分类讨论一下就可以了
概率只是用来分类讨论算权值的,这道题本质上和概率期望没什么关系
dp[j][1]=min(dp[j-1][1]+S*SS*f[B[i-1]][B[i]]+S*FF*f[B[i-1]][A[i]]+F*SS*f[A[i-1]][B[i]]+F*FF*f[A[i-1]][A[i],dp[j-1][0]+SS*f[A[i-1]][B[i]]+FF*f[A[i-1]][A[i]])(这条状态转移方程真的长)
dp[j][0]=min(dp[j][0]+f[A[i-1]][A[i]],dp[j][1]+S*f[B[i-1]][A[i]]+F*f[A[i-1]][A[i]])

